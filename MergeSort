import java.util.*;
public class Main
{
    public static void main(String[] args)
    {
        int[] arr = {1,3,5,8,0,2,4};
        mergeSort(arr, 0 , arr.length - 1);
        System.out.println(Arrays.toString(arr));

        /*
        int[] a = {1,3,5,8};
        int[] b = {0,2,4};
        System.out.println(Arrays.toString(merge(a,b)));
         */
    }

    public static int[] merge(int[] a, int[] b)
    {
        int[] sorted = new int[a.length + b.length];
        int ai = 0;
        int bi = 0;
        
        for(int i = 0; i < sorted.length; i++)
        {
            if(ai >= a.length)
            {
                sorted[i] = b[bi];
                bi++;
            }
            else if(bi >= b.length)
            {
                sorted[i] = a[ai];
                ai++;
            }
            else if(a[ai] <= b[bi])
            {
                sorted[i] = a[ai];
                ai++;
            }
            else
            {
                sorted[i] = b[bi];
                bi++;
            }
        }
        return sorted;
    }

    
    
    
    
    
    
    
    
    
    
    
    public static void merge(int[] arr, int low, int mid, int high)
    {
        int[] temp = new int[high - low + 1];
        int leftIndex = low;
        int rightIndex = mid + 1;
        for(int i = 0; i < temp.length; i++)
        {
            if(leftIndex > mid)
            {
                temp[i] = arr[rightIndex];
                rightIndex++;
            }
            else if(rightIndex > high)
            {
                temp[i] = arr[leftIndex];
                leftIndex++;
            }
            else if(arr[leftIndex] <= arr[rightIndex])
            {
                temp[i] = arr[leftIndex];
                leftIndex++;
            }
            else
            {
                temp[i] = arr[rightIndex];
                rightIndex++;
            }
        }

        for(int i = 0; i < temp.length; i++)
        {
            arr[i + low] = temp[i];
        }
    }

    public static void mergeSort(int[] arr, int low, int high)
    {
        if(low < high)
        {
            int mid = (low + high) / 2;
            mergeSort(arr,low, mid);
            mergeSort(arr,mid + 1, high);
            merge(arr,low, mid, high);
        }
    }

}
