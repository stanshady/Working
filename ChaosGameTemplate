import javafx.application.Application;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.layout.Pane;
import javafx.scene.shape.Circle;
import javafx.stage.Stage;

public class ChaosGameTemplate extends Application {

    Pane root;

    private Parent initRoot() {
        root = new Pane();
        root.setPrefSize(1000, 1000);


        //Set position of three vertices a, b, c.
        //Currently equilateral triangle with len = 800
        double a_x = 100;
        double a_y = 100 + Math.sqrt(3) * 800 / 2;
        double b_x = 500;
        double b_y = 100;
        double c_x = 900;
        double c_y = 100 + Math.sqrt(3) * 800 / 2;

        //Set initial position.
        double posX = 500;
        double posY = 100 + Math.sqrt(3) * 800 / 2;

        //How many dots do you want to draw?
        int numDots = 100000;

        //Main loop of ChaosGame
        for (int i = 0; i < numDots; i++) {
            //rand is a random int from 0-2.
            int rand = (int) (Math.random() * 3);

            //rand: 0 == a, 1 == b, 2 == c
            if (rand == 0) {
                posX = (posX + a_x) / 2;
                posY = (posY + a_y) / 2;
            } else if (rand == 1) {
                posX = (posX + b_x) / 2;
                posY = (posY + b_y) / 2;
            } else { //rand == 2
                posX = (posX + c_x) / 2;
                posY = (posY + c_y) / 2;
            }

            Circle dot = new Circle(posX, posY, 1);
            root.getChildren().add(dot);
        }

        return root;
    }


    @Override
    public void start(Stage primaryStage) throws Exception {
        primaryStage.setScene(new Scene(initRoot()));
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
